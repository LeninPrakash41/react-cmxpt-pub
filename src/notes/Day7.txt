/*
Why Components?

SPA - 1000 lines of code. They follow only Traditional DOM structure.

Error/Mistake - Here, component based appproach
COmplex Problem => Small or Logical Group of codes

DSA - Divide and Conquer

UI - Tree Structure

Root - Starting Component
Main Components - Branches /Sub Branches


Function - COntain only a render method not any State.

Inherit.js file

*/

import React, { Component } from "react";
class MyComp extends React.Component {
  render() {
    return (
      // JSX
      <div>
        <Alpha />
        <Beta />
      </div>
    );
  }
}

class Alpha extends React.Component {
  render() {
    return (
      <div>
        <h1> Alpha Version </h1>
      </div>
    );
  }
}

class Beta extends React.Component {
  render() {
    return (
      <div>
        <h1> Beta Version </h1>
      </div>
    );
  }
}

export default MyComp;

/*  Index.js */
import React, { Component } from "react";
import MyComp from "./Inherit";
import Inherit from "./Inherit";

class Cstate extends React.Component {
  constructor() {
    super();
    //initial state
    this.state = {
      data: [
        {
          name: "Lenin"
        },
        {
          name: "Prakash"
        },
        {
          name: "Karthik"
        }
      ]
    };
  }

  render() {
    return (
      <div>
        <SistData />
        <MyComp />
        <ul>
          {this.state.data.map((items) => (
            <ListData data={items} />
          ))}
        </ul>
      </div>
    );
  }
}

class SistData extends React.Component {
  render() {
    return (
      <div>
        <h1>Students Details</h1>
      </div>
    );
  }
}

class ListData extends React.Component {
  render() {
    return (
      <ul>
        <li>{this.props.data.name}</li>
      </ul>
    );
  }
}

export default Cstate;

/*

Composing the Components


*/


import React from "react";
import ReactDOM from "react-dom";
import MainPg from "./LifeCycle.jsx";

const rootElem = document.getElementById("root");

ReactDOM.render(<MainPg />, rootElem);

setTimeout(() => {
  ReactDOM.unmountComponentAtNode(rootElem);
}, 500);
