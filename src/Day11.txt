Render Lists with looping/iterative techniques

Javascript - map() is an array method

import React from "react";
import ReactDOM from "react-dom";

function Subscriber(props) {
  return <li> {props.role} </li>;
}

function RegisteredSubscriber() {
  //const users = ["Lenin", "Praveen", "Karthiga"];
  const users = [
    { id: 1, role: "Lenin" },
    { id: 2, role: "Praveen" },
    { id: 3, role: "Karthiga" }
  ];
  return (
    <div>
      <h1> List of Subscribers</h1>
      <ul>
        {users.map((user) => (
          // <Subscriber role={user} />
          <Subscriber key={user.id} role={user.role} />
        ))}
      </ul>
    </div>
  );
}

// Keys - keep track of elements. Should be unique for each siblings.
// Unique ID which we assign to each item. Array[0...n]
const rootElem = document.getElementById("root");
ReactDOM.render(<RegisteredSubscriber />, rootElem);



/*

React Routing Technique

Routing is nothig but a Navigation to a particular page. Based on the User action we have to redirect the page and 
load all the components that are required to run an app smoothly.

Example: SideMenu or TabMenu - Multiple Pages 
Based on user action we can redirect to selected page

Create-react-app will not include Routing technique
npm i -D react-router-dom (npm i -D react-router-dom@latest)

Folder Structure - 

src/pages/{filename.js}

*/

import React from "react";
import ReactDOM from "react-dom";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Layout from "./pages/Layout";
import Home from "./pages/Home";
import About from "./pages/About";
import Blog from "./pages/Blog";
import Contact from "./pages/Contact";
import NF from "./pages/404";

export default function App() {
  return (
    // Wrap our files and contents inside BrowserRouter
    <BrowserRouter>
      {/* Define <Routes> */}
      <Routes>
        {/* <Route> can be nested one, Nested route inherit and add to the base route */}
        <Route path="/" element={<Layout />}>
          {/* ROute does not have a path but have an index attribute,
           specifies this route as the default route for base
            route whic is nothign but '/' */}

          <Route index element={<Home />} />
          {/* /about or /blog or /contact */}
          <Route path="about" element={<About />} />
          <Route path="blog" element={<Blog />} />
          <Route path="contact" element={<Contact />} />
          <Route path="*" element={<NF />} />
        </Route>
      </Routes>
    </BrowserRouter>
  );
}

const rootElem = document.getElementById("root");
ReactDOM.render(<App />, rootElem);
